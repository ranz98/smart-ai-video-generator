:root {
    --bg-dark: #121212;
    --bg-darker: #0a0a0a;
    --card-dark: #1e1e1e;
    --accent-color: #6e48aa;
    --accent-hover: #7d5bbe;
    --text-primary: #f5f5f5;
    --text-secondary: #b3b3b3;
}

body {
    background-color: var(--bg-dark);
    color: var(--text-primary);
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    min-height: 100vh;
    margin: 0; /* Ensure no default body margin */
}

.navbar-brand {
    font-weight: 700;
    color: var(--accent-color);
}

.main-container {
    background-color: var(--bg-darker);
    border-radius: 10px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
    padding: 2rem;
    margin-top: 2rem;
    margin-bottom: 2rem; /* Add margin bottom for spacing before footer */
}

.prompt-card, .settings-card { /* Combined styles as they were identical */
    background-color: var(--card-dark);
    border-radius: 8px;
    border: none;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}


.prompt-textarea {
    background-color: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.1);
    color: var(--text-primary);
    resize: vertical; /* Allow only vertical resizing */
    min-height: 100px;
    padding: 10px; /* Added padding for better text spacing */
    width: 100%; /* Ensure it takes full width of parent */
    box-sizing: border-box; /* Include padding and border in element's total width and height */
}

.prompt-textarea::placeholder { /* Style placeholder text */
    color: var(--text-secondary);
    opacity: 0.7;
}


.prompt-textarea:focus {
    background-color: rgba(255, 255, 255, 0.08);
    border-color: var(--accent-color);
    color: var(--text-primary);
    box-shadow: 0 0 0 0.25rem rgba(110, 72, 170, 0.25);
}

.btn-generate {
    background-color: var(--accent-color);
    border: none;
    padding: 0.75rem 2rem;
    font-weight: 600;
    transition: all 0.3s ease;
    color: var(--text-primary); /* Ensure text color is readable */
    text-decoration: none; /* Remove potential underline */
    display: inline-flex; /* Align icon and text */
    align-items: center;
    justify-content: center;
}

.btn-generate:hover {
    background-color: var(--accent-hover);
    transform: translateY(-2px);
    box-shadow: 0 4px 15px rgba(110, 72, 170, 0.4);
    color: var(--text-primary); /* Keep text color on hover */
}

.btn-generate:active {
    transform: translateY(0);
    box-shadow: none;
}

.btn-generate:disabled { /* Style for disabled button */
    background-color: rgba(110, 72, 170, 0.5);
    cursor: not-allowed;
    transform: none;
    box-shadow: none;
}


.form-label {
    color: var(--text-secondary);
    font-size: 0.9rem;
    margin-bottom: 0.5rem; /* Added spacing */
}

.form-control, .form-select {
    background-color: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.1);
    color: var(--text-primary);
    padding: 0.375rem 0.75rem; /* Match Bootstrap default padding */
}

.form-control:focus, .form-select:focus {
    background-color: rgba(255, 255, 255, 0.08);
    border-color: var(--accent-color);
    color: var(--text-primary);
    box-shadow: 0 0 0 0.25rem rgba(110, 72, 170, 0.25);
}

.form-select option { /* Style options in dropdown */
    background-color: var(--card-dark);
    color: var(--text-primary);
}


.footer {
    color: var(--text-secondary);
    font-size: 0.8rem;
    background-color: var(--bg-darker); /* Match main container background */
}

/* Loader and Error/Status messages (as defined but not directly used by JS alerts) */
.loader {
    /* Keep existing loader style */
    display: none;
    width: 48px;
    height: 48px;
    border: 5px solid rgba(255, 255, 255, 0.1);
    border-bottom-color: var(--accent-color);
    border-radius: 50%;
    animation: rotation 1s linear infinite;
    margin: 20px auto;
}

@keyframes rotation {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

.error-message {
    color: #ff6b6b; /* Reddish color for errors */
    /* display: none; /* Managed by JS */
    margin-top: 10px;
    font-size: 0.9rem;
}

.status-message {
    margin-top: 10px;
    font-size: 0.9rem;
    color: var(--text-secondary); /* Grayish color for status */
}

/* Image grid styles */
.image-grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr); /* Default: 2 columns on small screens */
    gap: 15px;
    margin-top: 20px;
}

/* Responsive Image Grid */
/* Medium devices (tablets, 768px and up) */
@media (min-width: 768px) {
    .image-grid {
        grid-template-columns: repeat(3, 1fr); /* 3 columns */
    }
}

/* Large devices (desktops, 992px and up) */
@media (min-width: 992px) {
    .image-grid {
        grid-template-columns: repeat(4, 1fr); /* 4 columns */
    }
}

/* Extra large devices (large desktops, 1200px and up) */
@media (min-width: 1200px) {
    .image-grid {
         grid-template-columns: repeat(6, 1fr); /* 6 columns */
    }
}


.image-container {
    position: relative; /* Needed for absolute positioning of children */
    background-color: rgba(255, 255, 255, 0.03);
    border: 2px dashed rgba(255, 255, 255, 0.1);
    border-radius: 8px;
    aspect-ratio: 9/16; /* Set aspect ratio for vertical shorts */
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
    cursor: pointer; /* Indicate it's interactive (e.g. prompt toggle) */
}

/* Optional: Style for image container when active/focused/hovered */
.image-container:hover {
    border-color: rgba(255, 255, 255, 0.2);
}


.image-container img {
    display: block; /* Ensure img is block element */
    width: 100%;
    height: 100%;
    object-fit: cover;
    /* display: none; /* Managed by JS */
}

.image-placeholder {
    /* display: flex; /* Managed by JS */
    flex-direction: column;
    align-items: center;
    color: var(--text-secondary);
    text-align: center; /* Center text */
    padding: 10px; /* Add padding */
}

.image-placeholder i {
    font-size: 2rem;
    margin-bottom: 10px;
}

.prompt-display {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    background: linear-gradient(to top, rgba(0,0,0,0.8), transparent);
    padding: 10px;
    font-size: 0.8rem;
    color: white;
    /* display: none; /* Managed by JS */
    pointer-events: none; /* Allow clicks to pass through to elements below */
}

.prompt-toggle {
    position: absolute;
    top: 5px;
    right: 5px;
    background: rgba(0,0,0,0.5);
    border: none;
    color: white;
    border-radius: 50%;
    width: 25px;
    height: 25px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    z-index: 10; /* Ensure it's above the image and prompt display */
    transition: background-color 0.2s ease;
    padding: 0;
}

.prompt-toggle:hover {
    background: rgba(0,0,0,0.7);
}

.prompt-toggle:disabled {
    cursor: not-allowed;
    opacity: 0.5;
}


/* NEW: Regenerate Image Button */
.regenerate-image-btn {
    position: absolute;
    top: 5px;
    left: 5px; /* Position on the left */
    background: rgba(0,0,0,0.5);
    border: none;
    color: white;
    border-radius: 50%;
    width: 25px;
    height: 25px;
    display: flex; /* Use flex for centering icon */
    align-items: center;
    justify-content: center;
    cursor: pointer;
    z-index: 10; /* Ensure it's above other content */
    transition: background-color 0.2s ease; /* Smooth hover */
    padding: 0; /* Remove default button padding */
}

.regenerate-image-btn:hover {
    background: rgba(0,0,0,0.7);
}

.regenerate-image-btn:disabled {
    cursor: not-allowed;
    opacity: 0.5;
}


/* Demo mode toggle */
.demo-toggle {
    display: flex;
    align-items: center;
    gap: 10px;
    margin-bottom: 15px;
    color: var(--text-secondary); /* Style the text */
    font-size: 0.9rem; /* Match form label size */
}

/* Toggle Switch styles (keep as is) */
.toggle-switch {
    position: relative;
    display: inline-block;
    width: 60px;
    height: 30px;
}

.toggle-switch input {
    opacity: 0;
    width: 0;
    height: 0;
}

.slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: #ccc;
    transition: .4s;
    border-radius: 34px;
}

.slider:before {
    position: absolute;
    content: "";
    height: 22px;
    width: 22px;
    left: 4px;
    bottom: 4px;
    background-color: white;
    transition: .4s;
    border-radius: 50%;
}

input:checked + .slider {
    background-color: var(--accent-color);
}

input:checked + .slider:before {
    transform: translateX(30px);
}

/* Script section */
.script-container {
    background-color: var(--card-dark);
    border-radius: 8px;
    padding: 15px;
    margin-top: 20px;
    /* max-height: 300px; /* Removed max-height for textarea */
    overflow-y: visible; /* Allow textarea to grow */
}

/* Script text (textarea) */
.script-text {
    white-space: pre-wrap; /* Maintain whitespace from generated text */
    font-family: inherit; /* Use body font or specify */
    line-height: 1.6; /* Improve readability */
    min-height: 150px; /* Give it some initial height */
    width: 100%; /* Ensure it fills the container */
    box-sizing: border-box; /* Include padding/border in size */
    background-color: transparent; /* Make it transparent over card background */
    border: none; /* Remove textarea border */
    color: var(--text-primary); /* Inherit text color */
    resize: vertical; /* Allow vertical resize */
}

.script-text:focus {
    outline: none; /* Remove default focus outline */
    box-shadow: none; /* Remove Bootstrap focus box-shadow */
}

/* Adjust column widths for large screens */
/* It's generally better to do this within media queries if you want responsiveness */
/* Applying unconditionally might break smaller layouts */
.col-lg-8 {
    /* flex: 0 0 80%; */
    /* max-width: 80%; */
     /* Revert to Bootstrap defaults or use media query */
}

.col-lg-4 {
    /* flex: 0 0 20%; */
    /* max-width: 20%; */
     /* Revert to Bootstrap defaults or use media query */
}

/* If you want the 80/20 split ONLY on large screens and up */
@media (min-width: 992px) { /* Corresponds to Bootstrap's lg breakpoint */
    .col-lg-8 {
        flex: 0 0 66.666667%; /* Bootstrap default col-lg-8 is 66.66% */
        max-width: 66.666667%;
        /* If you explicitly want 80% on large screens: */
        /* flex: 0 0 80%; */
        /* max-width: 80%; */
    }

    .col-lg-4 {
         flex: 0 0 33.333333%; /* Bootstrap default col-lg-4 is 33.33% */
         max-width: 33.333333%;
         /* If you explicitly want 20% on large screens: */
         /* flex: 0 0 20%; */
         /* max-width: 20%; */
    }
}

/* Styling for the "Save Changes" button next to Voiceover button */
.script-container .d-flex .btn {
    /* Adds spacing or alignment specific to buttons in this flex container */
}

/* Style for the regenerate prompt button next to prompt text */
.prompt-item {
    display: flex;
    align-items: flex-start;
    margin-bottom: 10px; /* Space between prompts */
    background-color: rgba(255, 255, 255, 0.03); /* Slight background for prompt item */
    padding: 10px;
    border-radius: 5px;
    border: 1px solid rgba(255, 255, 255, 0.08);
}

.prompt-item .prompt-text {
    flex-grow: 1; /* Allow text to take up space */
    margin-right: 10px; /* Space between text and button */
    word-break: break-word; /* Break long words */
}

.prompt-item .regenerate-prompt {
    background: transparent;
    border: none;
    color: var(--text-secondary);
    cursor: pointer;
    padding: 0 5px;
    transition: color 0.2s ease;
    flex-shrink: 0; /* Prevent button from shrinking */
}

.prompt-item .regenerate-prompt:hover {
    color: var(--text-primary);
}

.prompt-item .regenerate-prompt:disabled {
    cursor: not-allowed;
    opacity: 0.5;
}

/* Optional: Add a class for hidden elements managed by JS */
.hidden {
    display: none !important;
}